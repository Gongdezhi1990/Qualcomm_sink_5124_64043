/*****************************************************************************
Copyright (c) 2018 Qualcomm Technologies International, Ltd.
*********************************************************************************/

/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: calling.proto */

#ifndef PROTOBUF_C_calling_2eproto__INCLUDED
#define PROTOBUF_C_calling_2eproto__INCLUDED

#include <protobuf.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _ForwardATCommand ForwardATCommand;
typedef struct _IncomingCall IncomingCall;


/* --- enums --- */


/* --- messages --- */

struct  _ForwardATCommand
{
  ProtobufCMessage base;
  char *command;
};
#define FORWARD_ATCOMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&forward_atcommand__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _IncomingCall
{
  ProtobufCMessage base;
  char *caller_number;
};
#define INCOMING_CALL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&incoming_call__descriptor) \
    , (char *)protobuf_c_empty_string }


/* ForwardATCommand methods */
void   forward_atcommand__init
                     (ForwardATCommand         *message);
size_t forward_atcommand__get_packed_size
                     (const ForwardATCommand   *message);
size_t forward_atcommand__pack
                     (const ForwardATCommand   *message,
                      uint8_t             *out);
size_t forward_atcommand__pack_to_buffer
                     (const ForwardATCommand   *message,
                      ProtobufCBuffer     *buffer);
ForwardATCommand *
       forward_atcommand__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   forward_atcommand__free_unpacked
                     (ForwardATCommand *message,
                      ProtobufCAllocator *allocator);
/* IncomingCall methods */
void   incoming_call__init
                     (IncomingCall         *message);
size_t incoming_call__get_packed_size
                     (const IncomingCall   *message);
size_t incoming_call__pack
                     (const IncomingCall   *message,
                      uint8_t             *out);
size_t incoming_call__pack_to_buffer
                     (const IncomingCall   *message,
                      ProtobufCBuffer     *buffer);
IncomingCall *
       incoming_call__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   incoming_call__free_unpacked
                     (IncomingCall *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ForwardATCommand_Closure)
                 (const ForwardATCommand *message,
                  void *closure_data);
typedef void (*IncomingCall_Closure)
                 (const IncomingCall *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor forward_atcommand__descriptor;
extern const ProtobufCMessageDescriptor incoming_call__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_calling_2eproto__INCLUDED */
