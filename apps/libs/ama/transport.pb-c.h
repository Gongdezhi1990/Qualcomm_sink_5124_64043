/*****************************************************************************
Copyright (c) 2018 Qualcomm Technologies International, Ltd.
*********************************************************************************/

/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: transport.proto */

#ifndef PROTOBUF_C_transport_2eproto__INCLUDED
#define PROTOBUF_C_transport_2eproto__INCLUDED

#include <protobuf.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "common.pb-c.h"

typedef struct _ConnectionDetails ConnectionDetails;
typedef struct _UpgradeTransport UpgradeTransport;
typedef struct _SwitchTransport SwitchTransport;


/* --- enums --- */


/* --- messages --- */

struct  _ConnectionDetails
{
  ProtobufCMessage base;
  ProtobufCBinaryData identifier;
};
#define CONNECTION_DETAILS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&connection_details__descriptor) \
    , {0,NULL} }


struct  _UpgradeTransport
{
  ProtobufCMessage base;
  Transport transport;
};
#define UPGRADE_TRANSPORT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&upgrade_transport__descriptor) \
    , TRANSPORT__BLUETOOTH_LOW_ENERGY }


struct  _SwitchTransport
{
  ProtobufCMessage base;
  Transport new_transport;
};
#define SWITCH_TRANSPORT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&switch_transport__descriptor) \
    , TRANSPORT__BLUETOOTH_LOW_ENERGY }


/* ConnectionDetails methods */
void   connection_details__init
                     (ConnectionDetails         *message);
size_t connection_details__get_packed_size
                     (const ConnectionDetails   *message);
size_t connection_details__pack
                     (const ConnectionDetails   *message,
                      uint8_t             *out);
size_t connection_details__pack_to_buffer
                     (const ConnectionDetails   *message,
                      ProtobufCBuffer     *buffer);
ConnectionDetails *
       connection_details__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   connection_details__free_unpacked
                     (ConnectionDetails *message,
                      ProtobufCAllocator *allocator);
/* UpgradeTransport methods */
void   upgrade_transport__init
                     (UpgradeTransport         *message);
size_t upgrade_transport__get_packed_size
                     (const UpgradeTransport   *message);
size_t upgrade_transport__pack
                     (const UpgradeTransport   *message,
                      uint8_t             *out);
size_t upgrade_transport__pack_to_buffer
                     (const UpgradeTransport   *message,
                      ProtobufCBuffer     *buffer);
UpgradeTransport *
       upgrade_transport__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   upgrade_transport__free_unpacked
                     (UpgradeTransport *message,
                      ProtobufCAllocator *allocator);
/* SwitchTransport methods */
void   switch_transport__init
                     (SwitchTransport         *message);
size_t switch_transport__get_packed_size
                     (const SwitchTransport   *message);
size_t switch_transport__pack
                     (const SwitchTransport   *message,
                      uint8_t             *out);
size_t switch_transport__pack_to_buffer
                     (const SwitchTransport   *message,
                      ProtobufCBuffer     *buffer);
SwitchTransport *
       switch_transport__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   switch_transport__free_unpacked
                     (SwitchTransport *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ConnectionDetails_Closure)
                 (const ConnectionDetails *message,
                  void *closure_data);
typedef void (*UpgradeTransport_Closure)
                 (const UpgradeTransport *message,
                  void *closure_data);
typedef void (*SwitchTransport_Closure)
                 (const SwitchTransport *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor connection_details__descriptor;
extern const ProtobufCMessageDescriptor upgrade_transport__descriptor;
extern const ProtobufCMessageDescriptor switch_transport__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_transport_2eproto__INCLUDED */
