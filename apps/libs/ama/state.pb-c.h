/*****************************************************************************
Copyright (c) 2018 Qualcomm Technologies International, Ltd.
*********************************************************************************/

/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: state.proto */

#ifndef PROTOBUF_C_state_2eproto__INCLUDED
#define PROTOBUF_C_state_2eproto__INCLUDED

#include <protobuf.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _State State;
typedef struct _GetState GetState;
typedef struct _SetState SetState;
typedef struct _SynchronizeState SynchronizeState;


/* --- enums --- */


/* --- messages --- */

typedef enum {
  STATE__VALUE__NOT_SET = 0,
  STATE__VALUE_BOOLEAN = 2,
  STATE__VALUE_INTEGER = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STATE__VALUE)
} State__ValueCase;

struct  _State
{
  ProtobufCMessage base;
  uint32_t feature;
  State__ValueCase value_case;
  union {
    protobuf_c_boolean boolean;
    uint32_t integer;
  }u;
};
#define STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&state__descriptor) \
    , 0, STATE__VALUE__NOT_SET, {0} }


struct  _GetState
{
  ProtobufCMessage base;
  uint32_t feature;
};
#define GET_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_state__descriptor) \
    , 0 }


struct  _SetState
{
  ProtobufCMessage base;
  State *state;
};
#define SET_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&set_state__descriptor) \
    , NULL }


struct  _SynchronizeState
{
  ProtobufCMessage base;
  State *state;
};
#define SYNCHRONIZE_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&synchronize_state__descriptor) \
    , NULL }


/* State methods */
void   state__init
                     (State         *message);
size_t state__get_packed_size
                     (const State   *message);
size_t state__pack
                     (const State   *message,
                      uint8_t             *out);
size_t state__pack_to_buffer
                     (const State   *message,
                      ProtobufCBuffer     *buffer);
State *
       state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   state__free_unpacked
                     (State *message,
                      ProtobufCAllocator *allocator);
/* GetState methods */
void   get_state__init
                     (GetState         *message);
size_t get_state__get_packed_size
                     (const GetState   *message);
size_t get_state__pack
                     (const GetState   *message,
                      uint8_t             *out);
size_t get_state__pack_to_buffer
                     (const GetState   *message,
                      ProtobufCBuffer     *buffer);
GetState *
       get_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_state__free_unpacked
                     (GetState *message,
                      ProtobufCAllocator *allocator);
/* SetState methods */
void   set_state__init
                     (SetState         *message);
size_t set_state__get_packed_size
                     (const SetState   *message);
size_t set_state__pack
                     (const SetState   *message,
                      uint8_t             *out);
size_t set_state__pack_to_buffer
                     (const SetState   *message,
                      ProtobufCBuffer     *buffer);
SetState *
       set_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   set_state__free_unpacked
                     (SetState *message,
                      ProtobufCAllocator *allocator);
/* SynchronizeState methods */
void   synchronize_state__init
                     (SynchronizeState         *message);
size_t synchronize_state__get_packed_size
                     (const SynchronizeState   *message);
size_t synchronize_state__pack
                     (const SynchronizeState   *message,
                      uint8_t             *out);
size_t synchronize_state__pack_to_buffer
                     (const SynchronizeState   *message,
                      ProtobufCBuffer     *buffer);
SynchronizeState *
       synchronize_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   synchronize_state__free_unpacked
                     (SynchronizeState *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*State_Closure)
                 (const State *message,
                  void *closure_data);
typedef void (*GetState_Closure)
                 (const GetState *message,
                  void *closure_data);
typedef void (*SetState_Closure)
                 (const SetState *message,
                  void *closure_data);
typedef void (*SynchronizeState_Closure)
                 (const SynchronizeState *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor state__descriptor;
extern const ProtobufCMessageDescriptor get_state__descriptor;
extern const ProtobufCMessageDescriptor set_state__descriptor;
extern const ProtobufCMessageDescriptor synchronize_state__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_state_2eproto__INCLUDED */
