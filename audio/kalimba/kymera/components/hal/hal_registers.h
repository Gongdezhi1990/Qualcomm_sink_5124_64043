/****************************************************************************
 * Copyright (c) 2009 - 2017 Qualcomm Technologies International, Ltd.
****************************************************************************/
/**
 * \file hal_registers.h
 *
 * Accessor macros used by the macros in the autogenerated file
 * hal_macros.h. They are collected into one file here for convenience; they
 * can be redefined for simulation and the like more easily.
 *
 * \ingroup HAL
 */

#ifndef HAL_REGISTERS_H
#define HAL_REGISTERS_H

/*
 * Veneer layer for a firmware build for real hardware
 */

/**
 * \brief  macro to read a value from a memory-mapped register
 * 
 * \param  reg  Register to read.
 *
 * \param  width  width of the register in words (i.e. 1 for 16-bit registers),
 * which may be needed by other veneers.
 *
 * Read the memory location corresponding to the register
 *
 */
#define hal_get_register(reg, width) (reg)


/**
 * \brief  macro to read a value from a memory-mapped array register
 * 
 * \param  reg  Register to read.
 *
 * \param  i  index into array register
 *
 * Read the memory location corresponding to the given index into a
 * array register.
 *
 */
#define hal_get_register_indexed(reg, i) ((reg)[i])


/**
 * \brief  macro to write a value to a memory-mapped register
 * 
 * \param  reg  Register to write.
 *
 * \param  x  value to write.
 *
 * \param  width  width of the register in words (i.e. 1 for 16-bit registers),
 * which may be needed by other veneers.
 *
 * Write to the memory location corresponding to the register
 *
 */
#define hal_set_register(reg, x, width) ((void) ((reg) = (x)))


/**
 * \brief  macro to write a value to a memory-mapped array register
 * 
 * \param  reg  Register to write.
 *
 * \param  i  index into array register
 *
 * \param  x  value to write.
 *
 * Write to the memory location corresponding to the given index into a array
 * register
 *
 */
#define hal_set_register_indexed(reg, i, x) ((void) ((reg)[i] = (x)))


#endif /* HAL_REGISTERS_H */
