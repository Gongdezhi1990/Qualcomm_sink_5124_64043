/*****************************************************************************
Copyright (c) 2018 Qualcomm Technologies International, Ltd.
*********************************************************************************/

/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: system.proto */

#ifndef PROTOBUF_C_system_2eproto__INCLUDED
#define PROTOBUF_C_system_2eproto__INCLUDED

#include <protobuf.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _ResetConnection ResetConnection;
typedef struct _SynchronizeSettings SynchronizeSettings;
typedef struct _KeepAlive KeepAlive;
typedef struct _RemoveDevice RemoveDevice;


/* --- enums --- */


/* --- messages --- */

struct  _ResetConnection
{
  ProtobufCMessage base;
  uint32_t timeout;
  protobuf_c_boolean force_disconnect;
};
#define RESET_CONNECTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&reset_connection__descriptor) \
    , 0, 0 }


struct  _SynchronizeSettings
{
  ProtobufCMessage base;
  uint32_t timestamp_hi;
  uint32_t timestamp_lo;
};
#define SYNCHRONIZE_SETTINGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&synchronize_settings__descriptor) \
    , 0, 0 }


struct  _KeepAlive
{
  ProtobufCMessage base;
};
#define KEEP_ALIVE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&keep_alive__descriptor) \
     }


struct  _RemoveDevice
{
  ProtobufCMessage base;
};
#define REMOVE_DEVICE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remove_device__descriptor) \
     }


/* ResetConnection methods */
void   reset_connection__init
                     (ResetConnection         *message);
size_t reset_connection__get_packed_size
                     (const ResetConnection   *message);
size_t reset_connection__pack
                     (const ResetConnection   *message,
                      uint8_t             *out);
size_t reset_connection__pack_to_buffer
                     (const ResetConnection   *message,
                      ProtobufCBuffer     *buffer);
ResetConnection *
       reset_connection__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   reset_connection__free_unpacked
                     (ResetConnection *message,
                      ProtobufCAllocator *allocator);
/* SynchronizeSettings methods */
void   synchronize_settings__init
                     (SynchronizeSettings         *message);
size_t synchronize_settings__get_packed_size
                     (const SynchronizeSettings   *message);
size_t synchronize_settings__pack
                     (const SynchronizeSettings   *message,
                      uint8_t             *out);
size_t synchronize_settings__pack_to_buffer
                     (const SynchronizeSettings   *message,
                      ProtobufCBuffer     *buffer);
SynchronizeSettings *
       synchronize_settings__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   synchronize_settings__free_unpacked
                     (SynchronizeSettings *message,
                      ProtobufCAllocator *allocator);
/* KeepAlive methods */
void   keep_alive__init
                     (KeepAlive         *message);
size_t keep_alive__get_packed_size
                     (const KeepAlive   *message);
size_t keep_alive__pack
                     (const KeepAlive   *message,
                      uint8_t             *out);
size_t keep_alive__pack_to_buffer
                     (const KeepAlive   *message,
                      ProtobufCBuffer     *buffer);
KeepAlive *
       keep_alive__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   keep_alive__free_unpacked
                     (KeepAlive *message,
                      ProtobufCAllocator *allocator);
/* RemoveDevice methods */
void   remove_device__init
                     (RemoveDevice         *message);
size_t remove_device__get_packed_size
                     (const RemoveDevice   *message);
size_t remove_device__pack
                     (const RemoveDevice   *message,
                      uint8_t             *out);
size_t remove_device__pack_to_buffer
                     (const RemoveDevice   *message,
                      ProtobufCBuffer     *buffer);
RemoveDevice *
       remove_device__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remove_device__free_unpacked
                     (RemoveDevice *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ResetConnection_Closure)
                 (const ResetConnection *message,
                  void *closure_data);
typedef void (*SynchronizeSettings_Closure)
                 (const SynchronizeSettings *message,
                  void *closure_data);
typedef void (*KeepAlive_Closure)
                 (const KeepAlive *message,
                  void *closure_data);
typedef void (*RemoveDevice_Closure)
                 (const RemoveDevice *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor reset_connection__descriptor;
extern const ProtobufCMessageDescriptor synchronize_settings__descriptor;
extern const ProtobufCMessageDescriptor keep_alive__descriptor;
extern const ProtobufCMessageDescriptor remove_device__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_system_2eproto__INCLUDED */
